//============================================================================
// Name        : HW1.cpp
// Author      : Alex G
// Version     :
// Copyright   : Your copyright notice
// Description : Hello World in C++, Ansi-style
//============================================================================

#include <iostream>
#include <string.h>
//#define my_sizeof(type) ((char *)(&type+1)-(char*)(&type))

using namespace std;

enum screen
{
	BEGINNING = 0,
	PLAYER = 1,
	CPU = 2,
	RESULTS = 3,
} state;

enum screen beginningPhase();
enum screen playerPhase();
enum screen cpuPhase();
enum screen resultsPhase(bool res);
void printBoard();

int countGreen=3,countYellow=7,countOrange=5;

int main() {
	bool result = false; // false is lose, true is win for player 1
	//	char group1[4] = {'G', 'G', 'G'};
	//	char group2[8] = {'Y', 'Y', 'Y', 'Y', 'Y', 'Y', 'Y'};
	//	char group3[6] = {'O', 'O', 'O', 'O', 'O'};

	//	int size1 = my_sizeof(group1) / my_sizeof(group1);
	//	int size2 = my_sizeof(group2) / my_sizeof(group2);
	//	int size3 = my_sizeof(group3) / my_sizeof(group3);

	//	for(char x : group1)
	//	cout << x;
	//	cout << endl;
	//	for(char x : group2)
	//	cout << x;
	//	cout << endl;
	//	for(char x : group3)
	//	cout << x;
	//	cout << endl;
	//	cout << endl;

	printBoard();

	state = BEGINNING;
	while(1)
	{
		switch(state)
		{
		case BEGINNING:
			state = beginningPhase();
			break;

		case PLAYER:
			state = playerPhase();
			if((countGreen == 0) && (countYellow == 0) && (countOrange == 0)){
				result = true;
				state = RESULTS;
			}
			break;
		case CPU:
			state = cpuPhase();
			if((countGreen == 0) && (countYellow == 0) && (countOrange == 0)){
				result = false;
				state = RESULTS;
			}
			break;
		case RESULTS:
			state = resultsPhase(result);
			exit(0);
		}
	}
}

void printBoard(){
	int i;
	for(i=0;i<countGreen;i++){
		cout<<"G";
	}
	cout<<"\n";
	for(i=0;i<countYellow;i++){
		cout<<"Y";
	}
	cout<<"\n";
	for(i=0;i<countOrange;i++){
		cout<<"O";
	}
	cout<<"\n";

}
enum screen beginningPhase()
{
	//determine who goes first
	string choice;
	cout<<"Do you want to go first?(y/n): ";
	cin>>choice;
	cout<<"\n";
	if(choice=="y"){
		state = PLAYER;
	}
	else{
		state = CPU;
	}
	return state;
}
enum screen playerPhase()
{
	string color;
	int num;
	int valid=0;
	cout << "Player's turn" << endl;
	while(!valid){
		cout << "Which group you'd like to choose(G/Y/O):"; //choose color
		cin >> color;
		cout << "\n";


		cout << "Select how many colors to remove:"; //choose number
		cin >> num;
		cout << "\n";

		if(color=="G"){
			if((num < countGreen) && (num > 0)){
				valid=1;
			}
		}
		if(color=="Y"){
			if((num < countYellow) && (num > 0)){
				valid=1;
			}
		}
		if(color=="O"){
			if((num < countOrange) && (num > 0)){
				valid=1;
			}
		}

		else{
			cout<<"Invalid Input! Please Try Again!";
		}

	}


	state = CPU;
	return state;
}
enum screen cpuPhase()
{

	//	for(char x : g1)
	//	cout << x;
	//	cout << endl;
	//	for(char x : g2)
	//	cout << x;
	//	cout << endl;
	//	for(char x : g3)
	//	cout << x;
	//	cout << endl;
	cout << "CPU's turn" << endl;
	cout << "CPU chooses this color" << endl;
	//choose group
	cout << "CPU removes" << endl;
	state = RESULTS; // this is hardcoded!
	return state;
}
enum screen resultsPhase(bool res)
{
	if(res == false){
		cout << "You Lose" << endl;
	}
	else if (res == true){
		cout << "You Win" << endl;
	}
	state = RESULTS;
	return state;
}
